//NON ESISTE
{
    "test": {
      "name": "Does the OP correctly handles the prompt parameter set to \"consent\" in the case of SSO",
      "description": "In the case of the prompt parameter set to consent in an authentication request, the OP has to verify if a SSO session is active and, in this case, it should consent the request. In order to verify this behavior, an authentication request with the prompt parameter set to consent while such a session is active is accomplished and the action of the OP verified. It should not show a login page, automatically authenticating the user. (a SSO session can be simulated by performing a first authentication without a logout and then another authentication request. In both authentication set the prompt parameter to consent login)",
      "type": "active",
      "sessions": [
        "s1",
        "s1-logout"
      ],
      "operations": [
        {
          "session": "s1-logout",
          "action": "start"
        },
        {
          "action": "intercept",
          "from session": "s1-logout",
          "then": "forward",
          "message type": "Authentication request",
          "decode operations": [
            {
              "from": "url",
              "type": "jwt",
              "encodings": [],
              "decode param": "(?<request)[^$\n& ]*",
              "checks": [
                {
                  "in": "payload",
                  "jwt edit": "$.prompt",
                  "value": "consent login"
                }
              ]
            },
            {
              "from": "url",
              "type": "jwt",
              "encodings": [],
              "decode param": "(?<request)[^$\n& ]*",
              "jwt sign": "XXX"
            }
          ]
        },
        {
          "session": "s1",
          "action": "start"
        },
        {
          "action": "intercept",
          "from session": "s1",
          "then": "forward",
          "message type": "Authentication request",
          "decode operations": [
            {
              "from": "url",
              "type": "jwt",
              "encodings": [],
              "decode param": "(?<request)[^$\n& ]*",
              "checks": [
                {
                  "in": "payload",
                  "jwt edit": "$.prompt",
                  "value": "consent login"
                }
              ]
            },
            {
              "from": "url",
              "type": "jwt",
              "encodings": [],
              "decode param": "(?<request)[^$\n& ]*",
              "jwt sign": "XXX"
            }
          ]
        }
      ],
      "result": "incorrect flow s1"
    }
  }