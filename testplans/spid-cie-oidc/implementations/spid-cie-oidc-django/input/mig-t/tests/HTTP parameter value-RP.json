{
  "test suite": {
    "name": "RP",
    "description": "HTTP parameter value",
    "filter messages": true
  },
  "tests": [
    {
      "test": {
        "name": "Does the Introspection Request contain correct type of client_assertion_type",
        "description": "The Introspection request made by the RP is taken and the value of the client_assertion_type parameter is urn:ietf:params:oauth:clientassertion-type:jwt-bearer",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Introspection request",
            "checks": [
              {
                "in": "body",
                "is": "urn:ietf:params:oauth:clientassertion-type:jwt-bearer",
                "check": "client_assertion_type"
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the Introspection Request contain correct client id of the RP making the request",
        "description": "The Introspection request made by the RP is taken and the value of the client_id parameter identifies the RP",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Introspection request",
            "checks": [
              {
                "in": "body",
                "is": "X_url_RP",
                "check": "client_id"
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the Revocation Request contain correct client_assertion_type",
        "description": "The Revocation request made by the RP is taken and the value of the client_assertion_type parameter is urn:ietf:params:oauth:clientassertion-type:jwt-bearer",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Revocation request",
            "checks": [
              {
                "in": "body",
                "is": "urn:ietf:params:oauth:clientassertion-type:jwt-bearer",
                "check": "client_assertion_type"
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the client_assertion_type paramter in the token request contain the correct type",
        "description": "The client_assertion_type parameter in the URL of the token request sent by the RP must be set to urn:ietf:params:oauth:client-assertion-type:jwtbearer",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Token request",
            "checks": [
              {
                "in": "body",
                "is": "urn:ietf:params:oauth:client-assertion-type:jwtbearer",
                "check": "client_assertion_type"
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the client_id in the token request identifies the RP",
        "description": "The client_id parameter in the URL of the token request is taken. This parameter must identify the RP",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Token request",
            "checks": [
              {
                "in": "body",
                "is": "https://relying-party.org:8001",
                "check": "client_id"
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the entity return a correct Content-Type in the EC response",
        "description": "In this test a correct request to the entity's /.well-known/openid-federation endpoint is made and the response is analyzed. It must have a Content-Type parameter set to application/entity-statement+jwt",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Configuration response RP",
            "checks": [
              {
                "in": "head",
                "is": "application/entity-statement+jwt",
                "check param": "Content-Type"
              }
            ]
          }
        ]
      }
    }
  ]
}