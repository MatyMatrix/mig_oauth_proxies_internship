{
  "test suite": {
    "name": "OP",
    "description": "JWT parameter JSON presence",
    "filter messages": true
  },
  "tests": [
    {
      "test": {
        "name": "Does the OP metadata contain the jwks claim in the openid_provider subclaim",
        "description": "In this test the OP metadata are taken and the presence of the 'jwks' parameter in the 'openid_provider' subclaim (metadata type) is checked",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Configuration response OP",
            "decode operations": [
              {
                "from": "body",
                "decode param": "[\\s\\S]*",
                "type": "jwt",
                "checks": [
                  {
                    "in": "payload",
                    "check": "$.metadata.openid_provider.jwks",
                    "is present": "true"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the OP metadata contain the jwks or signed_jwks_uri claim in the openid_provider subclaim",
        "description": "In this test the OP metadata are taken and the presence of the 'jwks' or the 'signed_jwks_uri' parameter in the 'openid_provider' subclaim (metadata type) is checked. There must be at least one of the two",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Configuration response OP",
            "decode operations": [
              {
                "from": "body",
                "decode param": "[\\s\\S]*",
                "type": "jwt",
                "checks": [
                  {
                    "in": "payload",
                    "check": "$.metadata.openid_provider.signed_jwks_uri",
                    "is present": "true"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the OP metadata contain the acr_values_supported claim in the openid_provider subclaim",
        "description": "In this test the OP metadata are taken and the presence of the 'acr_values_supported' in the 'openid_provider' subclaim (metadata type) parameter is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Configuration response OP",
            "decode operations": [
              {
                "from": "body",
                "decode param": "[\\s\\S]*",
                "type": "jwt",
                "checks": [
                  {
                    "in": "payload",
                    "check": "$.metadata.openid_provider.acr_values_supported",
                    "is present": "true"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the OP metadata contain the authorization_endpoint parameter",
        "description": "In this test the OP metadata are taken and the presence of the 'authorization_endpoint' parameter in the 'openid_provider' subclaim (metadata type) is checked. It must be present",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Configuration response OP",
            "decode operations": [
              {
                "from": "body",
                "decode param": "[\\s\\S]*",
                "type": "jwt",
                "checks": [
                  {
                    "in": "payload",
                    "check": "$.metadata.openid_provider.authorization_endpoint",
                    "is present": "true"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the OP metadata contain the code_challenge_methods_supported claim in the openid_provider subclaim",
        "description": "In this test the OP metadata are taken and the presence of the 'code_challenge_methods_supported' parameter in the 'openid_provider' subclaim (metadata type) is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Configuration response OP",
            "decode operations": [
              {
                "from": "body",
                "decode param": "[\\s\\S]*",
                "type": "jwt",
                "checks": [
                  {
                    "in": "payload",
                    "check": "$.metadata.openid_provider.code_challenge_methods_supported",
                    "is present": "true"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the OP metadata contain the contacts claim",
        "description": "In this test the OP metadata in the OP Entity Configuration are taken and the presence of the contacts claim in the 'federation_entity' entity type is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Configuration response OP",
            "decode operations": [
              {
                "from": "body",
                "decode param": "[\\s\\S]*",
                "type": "jwt",
                "checks": [
                  {
                    "in": "payload",
                    "check": "$.metadata.federation_entity.contacts",
                    "is present": "true"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the OP metadata contain the federation_resolve_endpoint claim",
        "description": "In this test the OP metadata in the OP Entity Configuration are taken and the presence of the federation_resolve_endpoint claim in the 'federation_entity' entity type is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Configuration response OP",
            "decode operations": [
              {
                "from": "body",
                "decode param": "[\\s\\S]*",
                "type": "jwt",
                "checks": [
                  {
                    "in": "payload",
                    "check": "$.metadata.federation_entity.federation_resolve_endpoint",
                    "is present": "true"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the OP metadata contain the grant_types_supported claim in the openid_provider subclaim",
        "description": "In this test the OP metadata are taken and the presence of the 'grant_types_supported' parameter in the 'openid_provider' subclaim (metadata type) is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Configuration response OP",
            "decode operations": [
              {
                "from": "body",
                "decode param": "[\\s\\S]*",
                "type": "jwt",
                "checks": [
                  {
                    "in": "payload",
                    "check": "$.metadata.openid_provider.grant_types_supported",
                    "is present": "true"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the OP metadata contain the homepage_uri claim",
        "description": "In this test the OP metadata in the OP Entity Configuration are taken and the presence of the homepage_uri claim in the 'federation_entity' entity type is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Configuration response OP",
            "decode operations": [
              {
                "from": "body",
                "decode param": "[\\s\\S]*",
                "type": "jwt",
                "checks": [
                  {
                    "in": "payload",
                    "check": "$.metadata.federation_entity.homepage_uri",
                    "is present": "true"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the OP metadata contain the id_token_encryption_alg_values_supported claim in the openid_provider subclaim",
        "description": "In this test the OP metadata are taken and the presence of the 'id_token_encryption_alg_values_supported' parameter in the 'openid_provider' subclaim (metadata type) is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Configuration response OP",
            "decode operations": [
              {
                "from": "body",
                "decode param": "[\\s\\S]*",
                "type": "jwt",
                "checks": [
                  {
                    "in": "payload",
                    "check": "$.metadata.openid_provider.id_token_encryption_alg_values_supported",
                    "is present": "true"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the OP metadata contain the id_token_encryption_enc_values_supported claim in the openid_provider subclaim",
        "description": "In this test the OP metadata are taken and the presence of the 'id_token_encryption_enc_values_supported' parameter in the 'openid_provider' subclaim (metadata type) is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Configuration response OP",
            "decode operations": [
              {
                "from": "body",
                "decode param": "[\\s\\S]*",
                "type": "jwt",
                "checks": [
                  {
                    "in": "payload",
                    "check": "$.metadata.openid_provider.id_token_encryption_enc_values_supported",
                    "is present": "true"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the OP metadata contain the id_token_signing_alg_values_supported claim in the openid_provider subclaim",
        "description": "In this test the OP metadata are taken and the presence of the 'id_token_signing_alg_values_supported' parameter in the 'openid_provider' subclaim (metadata type) is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Configuration response OP",
            "decode operations": [
              {
                "from": "body",
                "decode param": "[\\s\\S]*",
                "type": "jwt",
                "checks": [
                  {
                    "in": "payload",
                    "check": "$.metadata.openid_provider.id_token_signing_alg_values_supported",
                    "is present": "true"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the OP metadata contain the introspection_endpoint parameter",
        "description": "In this test the OP metadata are taken and the presence of the 'introspection_endpoint' parameter in the 'openid_provider' subclaim (metadata type) is checked. It must be present",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Configuration response OP",
            "decode operations": [
              {
                "from": "body",
                "decode param": "[\\s\\S]*",
                "type": "jwt",
                "checks": [
                  {
                    "in": "payload",
                    "check": "$.metadata.openid_provider.introspection_endpoint",
                    "is present": "true"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the OP metadata contain the issuer parameter",
        "description": "In this test the OP metadata are taken and the presence of the 'issuer' parameter in the 'openid_provider' subclaim (metadata type) is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Configuration response OP",
            "decode operations": [
              {
                "from": "body",
                "decode param": "[\\s\\S]*",
                "type": "jwt",
                "checks": [
                  {
                    "in": "payload",
                    "check": "$.metadata.openid_provider.issuer",
                    "is present": "true"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the OP metadata contain the logo_uri claim",
        "description": "In this test the OP metadata in the OP Entity Configuration are taken and the presence of the logo_uri claim in the 'federation_entity' entity type is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Configuration response OP",
            "decode operations": [
              {
                "from": "body",
                "decode param": "[\\s\\S]*",
                "type": "jwt",
                "checks": [
                  {
                    "in": "payload",
                    "check": "$.metadata.federation_entity.logo_uri",
                    "is present": "true"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the OP metadata contain the organization_name claim",
        "description": "In this test the OP metadata in the OP Entity Configuration are taken and the presence of the organization_name claim in the 'federation_entity' entity type is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Configuration response OP",
            "decode operations": [
              {
                "from": "body",
                "decode param": "[\\s\\S]*",
                "type": "jwt",
                "checks": [
                  {
                    "in": "payload",
                    "check": "$.metadata.federation_entity.organization_name",
                    "is present": "true"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the OP metadata contain the policy_uri claim",
        "description": "In this test the OP metadata in the OP Entity Configuration are taken and the presence of the policy_uri claim in the 'federation_entity' entity type is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Configuration response OP",
            "decode operations": [
              {
                "from": "body",
                "decode param": "[\\s\\S]*",
                "type": "jwt",
                "checks": [
                  {
                    "in": "payload",
                    "check": "$.metadata.federation_entity.policy_uri",
                    "is present": "true"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the OP metadata contain the request_object_signing_alg_values_supported claim in the openid_provider subclaim",
        "description": "In this test the OP metadata are taken and the presence of the 'request_object_signing_alg_values_supported' parameter in the 'openid_provider' subclaim (metadata type) is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Configuration response OP",
            "decode operations": [
              {
                "from": "body",
                "decode param": "[\\s\\S]*",
                "type": "jwt",
                "checks": [
                  {
                    "in": "payload",
                    "check": "$.metadata.openid_provider.request_object_signing_alg_values_supported",
                    "is present": "true"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the OP metadata contain the response_modes_supported claim in the openid_provider subclaim",
        "description": "In this test the OP metadata are taken and the presence of the 'response_modes_supported' parameter in the 'openid_provider' subclaim (metadata type) is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Configuration response OP",
            "decode operations": [
              {
                "from": "body",
                "decode param": "[\\s\\S]*",
                "type": "jwt",
                "checks": [
                  {
                    "in": "payload",
                    "check": "$.metadata.openid_provider.response_modes_supported",
                    "is present": "true"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the OP metadata contain the response_types_supported claim",
        "description": "In this test the OP metadata are taken and the presence of the 'response_types_supported' parameter in the 'openid_provider' subclaim (metadata type) is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Configuration response OP",
            "decode operations": [
              {
                "from": "body",
                "decode param": "[\\s\\S]*",
                "type": "jwt",
                "checks": [
                  {
                    "in": "payload",
                    "check": "$.metadata.openid_provider.response_types_supported",
                    "is present": "true"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the OP metadata contain the revocation_endpoint parameter",
        "description": "In this test the OP metadata are taken and the presence of the 'revocation_endpoint' parameter in the 'openid_provider' subclaim (metadata type) is checked. It must be present",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Configuration response OP",
            "decode operations": [
              {
                "from": "body",
                "decode param": "[\\s\\S]*",
                "type": "jwt",
                "checks": [
                  {
                    "in": "payload",
                    "check": "$.metadata.openid_provider.revocation_endpoint",
                    "is present": "true"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the OP metadata contain the revocation_endpoint_auth_methods_supported claim in the openid_provider subclaim",
        "description": "In this test the OP metadata are taken and the presence of the 'revocation_endpoint_auth_methods_supported' parameter in the 'openid_provider' subclaim (metadata type) is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Configuration response OP",
            "decode operations": [
              {
                "from": "body",
                "decode param": "[\\s\\S]*",
                "type": "jwt",
                "checks": [
                  {
                    "in": "payload",
                    "check": "$.metadata.openid_provider.revocation_endpoint_auth_methods_supported",
                    "is present": "true"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the OP metadata contain the scopes_supported claim",
        "description": "In this test the OP metadata are taken and the presence of the 'scopes_supported' parameter in the 'openid_provider' subclaim (metadata type) is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Configuration response OP",
            "decode operations": [
              {
                "from": "body",
                "decode param": "[\\s\\S]*",
                "type": "jwt",
                "checks": [
                  {
                    "in": "payload",
                    "check": "$.metadata.openid_provider.scopes_supported",
                    "is present": "true"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the OP metadata contain the subject_types_supported claim in the openid_provider subclaim",
        "description": "In this test the OP metadata are taken and the presence of the 'subject_types_supported' parameter in the 'openid_provider' subclaim (metadata type) is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Configuration response OP",
            "decode operations": [
              {
                "from": "body",
                "decode param": "[\\s\\S]*",
                "type": "jwt",
                "checks": [
                  {
                    "in": "payload",
                    "check": "$.metadata.openid_provider.subject_types_supported",
                    "is present": "true"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the OP metadata contain the token_endpoint parameter",
        "description": "In this test the OP metadata are taken and the presence of the 'token_endpoint' parameter in the 'openid_provider' subclaim (metadata type) is checked. It must be present",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Configuration response OP",
            "decode operations": [
              {
                "from": "body",
                "decode param": "[\\s\\S]*",
                "type": "jwt",
                "checks": [
                  {
                    "in": "payload",
                    "check": "$.metadata.openid_provider.token_endpoint",
                    "is present": "true"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the OP metadata contain the userinfo_encryption_alg_values_supported claim in the openid_provider subclaim",
        "description": "In this test the OP metadata are taken and the presence of the 'userinfo_encryption_alg_values_supported' parameter in the 'openid_provider' subclaim (metadata type) is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Configuration response OP",
            "decode operations": [
              {
                "from": "body",
                "decode param": "[\\s\\S]*",
                "type": "jwt",
                "checks": [
                  {
                    "in": "payload",
                    "check": "$.metadata.openid_provider.userinfo_encryption_alg_values_supported",
                    "is present": "true"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the OP metadata contain the userinfo_encryption_enc_values_supported claim in the openid_provider subclaim",
        "description": "In this test the OP metadata are taken and the presence of the 'userinfo_encryption_enc_values_supported' parameter in the 'openid_provider' subclaim (metadata type) is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Configuration response OP",
            "decode operations": [
              {
                "from": "body",
                "decode param": "[\\s\\S]*",
                "type": "jwt",
                "checks": [
                  {
                    "in": "payload",
                    "check": "$.metadata.openid_provider.userinfo_encryption_enc_values_supported",
                    "is present": "true"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the OP metadata contain the userinfo_endpoint parameter",
        "description": "In this test the OP metadata are taken and the presence of the 'userinfo_endpoint' parameter in the 'openid_provider' subclaim (metadata type) is checked. It must be present",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Configuration response OP",
            "decode operations": [
              {
                "from": "body",
                "decode param": "[\\s\\S]*",
                "type": "jwt",
                "checks": [
                  {
                    "in": "payload",
                    "check": "$.metadata.openid_provider.userinfo_endpoint",
                    "is present": "true"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the OP metadata contain the userinfo_signing_alg_values_supported claim in the openid_provider subclaim",
        "description": "In this test the OP metadata are taken and the presence of the 'userinfo_signing_alg_values_supported' parameter in the 'openid_provider' subclaim (metadata type) is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Configuration response OP",
            "decode operations": [
              {
                "from": "body",
                "decode param": "[\\s\\S]*",
                "type": "jwt",
                "checks": [
                  {
                    "in": "payload",
                    "check": "$.metadata.openid_provider.userinfo_signing_alg_values_supported",
                    "is present": "true"
                  }
                ]
              }
            ]
          }
        ]
      }
    }
  ]
}