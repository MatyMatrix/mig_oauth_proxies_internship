{
  "test suite": {
    "name": "RP",
    "description": "HTTP parameter presence",
    "filter messages": true
  },
  "tests": [
    {
      "test": {
        "name": "Does the RP's Authentication Request contain the 'code_challenge' parameter",
        "description": "The Authentication request is taken and the presence of the 'code_challenge' parameter is checked. If it is present, than the Authentication Request is using PKCE and is compliant with the specifications, otherwise it is not compliant.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Authentication request",
            "checks": [
              {
                "in": "url",
                "is present": "true",
                "check param": "code_challenge"
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the RP's Authentication Request contain the 'code_challenge_method' parameter",
        "description": "The Authentication request is taken and the presence of the 'code_challenge_method' parameter is checked. If it is not present, then the RP is not compliant with the specifications",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Authentication request",
            "checks": [
              {
                "in": "url",
                "is present": "true",
                "check param": "code_challenge_method"
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the Introspection Request contain the client_assertion",
        "description": "The Introspection request made by the RP is taken and the presence of the client_assertion parameter is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Introspection request",
            "checks": [
              {
                "in": "body",
                "is present": "true",
                "check": "client_assertion"
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the Introspection Request contain the client_assertion_type",
        "description": "The Introspection request made by the RP is taken and the presence of the client_assertion_type parameter is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Introspection request",
            "checks": [
              {
                "in": "body",
                "is present": "true",
                "check": "client_assertion_type"
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the Introspection Request contain the client_assertion as a valid JWT",
        "description": "The Introspection request made by the RP is taken and the value of the client_assertion parameter is a signed JWT structure",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Introspection request",
            "checks": [
              {
                "in": "body",
                "is present": "true",
                "check": "client_assertion"
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the Introspection Request contain the client id of the RP making the request",
        "description": "The Introspection request made by the RP is taken and the presence of the client_id parameter is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Introspection request",
            "checks": [
              {
                "in": "body",
                "is present": "true",
                "check": "client_id"
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the Introspection Request contain the token",
        "description": "The Introspection request made by the RP is taken and the presence of the token parameter is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Introspection request",
            "checks": [
              {
                "in": "body",
                "is present": "true",
                "check": "token"
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the Revocation Request contain the client assertion",
        "description": "The Revocation request made by the RP is taken and the presence of the client_assertion parameter is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Revocation request",
            "checks": [
              {
                "in": "body",
                "is present": "true",
                "check": "client_assertion"
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the Revocation Request contain the client_assertion_type",
        "description": "The Revocation request made by the RP is taken and the presence of the client_assertion_type parameter is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Revocation request",
            "checks": [
              {
                "in": "body",
                "is present": "true",
                "check": "client_assertion_type"
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the Revocation Request contain the client_id of the RP making the request",
        "description": "The Revocation request made by the RP is taken and the presence of the client_id parameter is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Revocation request",
            "checks": [
              {
                "in": "body",
                "is present": "true",
                "check": "client_id"
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the Revocation Request contain the token for which the request is made",
        "description": "The Revocation request made by the RP is taken and the presence of the token parameter is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Revocation request",
            "checks": [
              {
                "in": "body",
                "is present": "true",
                "check": "token"
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the token request contain the client_assertion",
        "description": "The token request sent by the RP must contain client_assertion parameter in the URL",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Token request",
            "checks": [
              {
                "in": "body",
                "is present": "true",
                "check": "client_assertion"
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the token request contain the client_assertion_type",
        "description": "The token request sent by the RP must contain client_assertion_type parameter in the URL",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Token request",
            "checks": [
              {
                "in": "body",
                "is present": "true",
                "check": "client_assertion_type"
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the token request contain the client_id",
        "description": "The token request sent by the RP must contain client_id parameter in the URL",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Token request",
            "checks": [
              {
                "in": "body",
                "is present": "true",
                "check": "client_id"
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the token request contain the code parameter",
        "description": "The token request sent by the RP must contain code parameter in the URL",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Token request",
            "checks": [
              {
                "in": "body",
                "is present": "true",
                "check": "code"
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the token request contain the code_verifier parameter",
        "description": "The token request sent by the RP must contain code_verifier parameter in the URL",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Token request",
            "checks": [
              {
                "in": "body",
                "is present": "true",
                "check": "code_verifier"
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the token request contain the grant_type parameter",
        "description": "The token request sent by the RP must contain grant_type parameter in the URL",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Token request",
            "checks": [
              {
                "in": "body",
                "is present": "true",
                "check": "grant_type"
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the RP revoke the Token when the User logs out",
        "description": "In order to test if the RP really revokes an access token on logout, a classic authentication flow is computed and, once obtained the token and used, a logout is performed. After this, the requests made by the RP must be analyzed and there has to be a request to the OP's revocation endpoint for only the access token",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Revocation request",
            "checks": [
              {
                "in": "body",
                "is present": "true",
                "check": "token"
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the RP contain the Access Token in the UserInfo request",
        "description": "The UserInfo request from the RP is taken and analyzed. In the Authorization field of the header there must be an Access Token",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "UserInfo request",
            "checks": [
              {
                "in": "head",
                "is present": "true",
                "check param": "Authorization"
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the RP insert the client ID in the url of the request",
        "description": "In this test the Authentication Request is taken and the presence of the client_id parameter in the URL is checked",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Authentication request",
            "checks": [
              {
                "in": "url",
                "is present": "true",
                "check param": "client_id"
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the RP insert the response type in the url of the request",
        "description": "In this test the Authentication Request is taken and the presence of the response_type parameter in the URL is checked",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Authentication request",
            "checks": [
              {
                "in": "url",
                "is present": "true",
                "check param": "response_type"
              }
            ]
          }
        ]
      }
    }
  ]
}