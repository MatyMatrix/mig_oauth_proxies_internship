{
  "test suite": {
    "name": "SA",
    "description": "nested JWT parameter presence",
    "filter messages": true
  },
  "tests": [
    {
      "test": {
        "name": "Does the issued oauth_resource Trust Mark contain the claims claim",
        "description": "In this test, a Trust Mark issued for an AA (oauth_resource profile) must be taken, decrypted and the presence of the claims claim in it is checked",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Statement response OP",
            "decode operation": [
              {
                "from": "body",
                "type": "jwt",
                "decode param": "[\\s\\S]*",
                "decode operation": [
                  {
                    "jwt from": "jwt payload",
                    "type": "jwt",
                    "decode param": "$.trust_marks[0].trust_mark",
                    "check": [
                      {
                        "in": "payload",
                        "check": "claims",
                        "is present": "true"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the Trust Mark contain the email claim",
        "description": "In this test, an issued Trust Mark must be taken, decrypted and the presence of the email claim in it is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Statement response OP",
            "decode operation": [
              {
                "from": "body",
                "type": "jwt",
                "decode param": "[\\s\\S]*",
                "decode operation": [
                  {
                    "jwt from": "jwt payload",
                    "type": "jwt",
                    "decode param": "$.trust_marks[0].trust_mark",
                    "check": [
                      {
                        "in": "payload",
                        "check": "email",
                        "is present": "true"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the Trust Mark contain the id claim",
        "description": "In this test, an issued Trust Mark must be taken, decrypted and the presence of the id claim in it is checked",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Statement response OP",
            "decode operation": [
              {
                "from": "body",
                "type": "jwt",
                "decode param": "[\\s\\S]*",
                "decode operation": [
                  {
                    "jwt from": "jwt payload",
                    "type": "jwt",
                    "decode param": "$.trust_marks[0].trust_mark",
                    "check": [
                      {
                        "in": "payload",
                        "check": "id",
                        "is present": "true"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the Trust Mark contain the id_code claim",
        "description": "In this test, an issued Trust Mark must be taken, decrypted and the presence of the id_code claim in it is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Statement response OP",
            "decode operation": [
              {
                "from": "body",
                "type": "jwt",
                "decode param": "[\\s\\S]*",
                "decode operation": [
                  {
                    "jwt from": "jwt payload",
                    "type": "jwt",
                    "decode param": "$.trust_marks[0].trust_mark",
                    "check": [
                      {
                        "in": "payload",
                        "check": "id_code",
                        "is present": "true"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the Trust Mark contain the logo_uri claim",
        "description": "In this test, an issued Trust Mark must be taken, decrypted and the presence of the logo_uri claim in it is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Statement response OP",
            "decode operation": [
              {
                "from": "body",
                "type": "jwt",
                "decode param": "[\\s\\S]*",
                "decode operation": [
                  {
                    "jwt from": "jwt payload",
                    "type": "jwt",
                    "decode param": "$.trust_marks[0].trust_mark",
                    "check": [
                      {
                        "in": "payload",
                        "check": "logo_uri",
                        "is present": "true"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the Trust Mark contain the organization_name claim",
        "description": "In this test, an issued Trust Mark must be taken, decrypted and the presence of the organization_name claim in it is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Statement response OP",
            "decode operation": [
              {
                "from": "body",
                "type": "jwt",
                "decode param": "[\\s\\S]*",
                "decode operation": [
                  {
                    "jwt from": "jwt payload",
                    "type": "jwt",
                    "decode param": "$.trust_marks[0].trust_mark",
                    "check": [
                      {
                        "in": "payload",
                        "check": "organization_name",
                        "is present": "true"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the Trust Mark contain the organization_type claim",
        "description": "In this test, an issued Trust Mark must be taken, decrypted and the presence of the organization_type claim in it is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Statement response OP",
            "decode operation": [
              {
                "from": "body",
                "type": "jwt",
                "decode param": "[\\s\\S]*",
                "decode operation": [
                  {
                    "jwt from": "jwt payload",
                    "type": "jwt",
                    "decode param": "$.trust_marks[0].trust_mark",
                    "check": [
                      {
                        "in": "payload",
                        "check": "organization_type",
                        "is present": "true"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the issued oauth_resource Trust Mark contain the policy_uri claim",
        "description": "In this test, a Trust Mark issued for an AA (oauth_resource profile) must be taken, decrypted and the presence of the policy_uri claim in it is checked",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Statement response OP",
            "decode operation": [
              {
                "from": "body",
                "type": "jwt",
                "decode param": "[\\s\\S]*",
                "decode operation": [
                  {
                    "jwt from": "jwt payload",
                    "type": "jwt",
                    "decode param": "$.trust_marks[0].trust_mark",
                    "check": [
                      {
                        "in": "payload",
                        "check": "policy_uri",
                        "is present": "true"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the Trust Mark contain the ref claim",
        "description": "In this test, an issued Trust Mark must be taken, decrypted and the presence of the ref claim in it is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Statement response OP",
            "decode operation": [
              {
                "from": "body",
                "type": "jwt",
                "decode param": "[\\s\\S]*",
                "decode operation": [
                  {
                    "jwt from": "jwt payload",
                    "type": "jwt",
                    "decode param": "$.trust_marks[0].trust_mark",
                    "check": [
                      {
                        "in": "payload",
                        "check": "ref",
                        "is present": "true"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the issued oauth_resource Trust Mark contain the tos_uri claim",
        "description": "In this test, a Trust Mark issued for an AA (oauth_resource profile) must be taken, decrypted and the presence of the tos_uri claim in it is checked",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Statement response OP",
            "decode operation": [
              {
                "from": "body",
                "type": "jwt",
                "decode param": "[\\s\\S]*",
                "decode operation": [
                  {
                    "jwt from": "jwt payload",
                    "type": "jwt",
                    "decode param": "$.trust_marks[0].trust_mark",
                    "check": [
                      {
                        "in": "payload",
                        "check": "tos_uri",
                        "is present": "true"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the Trust Mark contain the exp claim",
        "description": "In this test, an issued Trust Mark must be taken, decrypted and the presence of the exp claim in it is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Statement response OP",
            "decode operation": [
              {
                "from": "body",
                "type": "jwt",
                "decode param": "[\\s\\S]*",
                "decode operation": [
                  {
                    "jwt from": "jwt payload",
                    "type": "jwt",
                    "decode param": "$.trust_marks[0].trust_mark",
                    "check": [
                      {
                        "in": "payload",
                        "check": "exp",
                        "is present": "true"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the Trust Mark contain the iat claim",
        "description": "In this test, an issued Trust Mark must be taken, decrypted and the presence of the iat claim in it is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Statement response OP",
            "decode operation": [
              {
                "from": "body",
                "type": "jwt",
                "decode param": "[\\s\\S]*",
                "decode operation": [
                  {
                    "jwt from": "jwt payload",
                    "type": "jwt",
                    "decode param": "$.trust_marks[0].trust_mark",
                    "check": [
                      {
                        "in": "payload",
                        "check": "iat",
                        "is present": "true"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the Trust Mark contain the iss claim",
        "description": "In this test, an issued Trust Mark must be taken, decrypted and the presence of the iss claim in it is checked",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Statement response OP",
            "decode operation": [
              {
                "from": "body",
                "type": "jwt",
                "decode param": "[\\s\\S]*",
                "decode operation": [
                  {
                    "jwt from": "jwt payload",
                    "type": "jwt",
                    "decode param": "$.trust_marks[0].trust_mark",
                    "check": [
                      {
                        "in": "payload",
                        "check": "iss",
                        "is present": "true"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the issued oauth_resource Trust Mark contain the service_documentation claim",
        "description": "In this test, a Trust Mark issued for an AA (oauth_resource profile) must be taken, decrypted and the presence of the service_documentation claim in it is checked",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Statement response OP",
            "decode operation": [
              {
                "from": "body",
                "type": "jwt",
                "decode param": "[\\s\\S]*",
                "decode operation": [
                  {
                    "jwt from": "jwt payload",
                    "type": "jwt",
                    "decode param": "$.trust_marks[0].trust_mark",
                    "check": [
                      {
                        "in": "payload",
                        "check": "service_documentation",
                        "is present": "true"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the Trust Mark contain the sub claim",
        "description": "In this test, an issued Trust Mark must be taken, decrypted and the presence of the sub claim in it is checked",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Statement response OP",
            "decode operation": [
              {
                "from": "body",
                "type": "jwt",
                "decode param": "[\\s\\S]*",
                "decode operation": [
                  {
                    "jwt from": "jwt payload",
                    "type": "jwt",
                    "decode param": "$.trust_marks[0].trust_mark",
                    "check": [
                      {
                        "in": "payload",
                        "check": "sub",
                        "is present": "true"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the issued oauth_resource Trust Mark contain the claims claim",
        "description": "In this test, a Trust Mark issued for an AA (oauth_resource profile) must be taken, decrypted and the presence of the claims claim in it is checked",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Statement response RP",
            "decode operation": [
              {
                "from": "body",
                "type": "jwt",
                "decode param": "[\\s\\S]*",
                "decode operation": [
                  {
                    "jwt from": "jwt payload",
                    "type": "jwt",
                    "decode param": "$.trust_marks[0].trust_mark",
                    "check": [
                      {
                        "in": "payload",
                        "check": "claims",
                        "is present": "true"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the Trust Mark contain the email claim",
        "description": "In this test, an issued Trust Mark must be taken, decrypted and the presence of the email claim in it is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Statement response RP",
            "decode operation": [
              {
                "from": "body",
                "type": "jwt",
                "decode param": "[\\s\\S]*",
                "decode operation": [
                  {
                    "jwt from": "jwt payload",
                    "type": "jwt",
                    "decode param": "$.trust_marks[0].trust_mark",
                    "check": [
                      {
                        "in": "payload",
                        "check": "email",
                        "is present": "true"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the Trust Mark contain the id claim",
        "description": "In this test, an issued Trust Mark must be taken, decrypted and the presence of the id claim in it is checked",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Statement response RP",
            "decode operation": [
              {
                "from": "body",
                "type": "jwt",
                "decode param": "[\\s\\S]*",
                "decode operation": [
                  {
                    "jwt from": "jwt payload",
                    "type": "jwt",
                    "decode param": "$.trust_marks[0].trust_mark",
                    "check": [
                      {
                        "in": "payload",
                        "check": "id",
                        "is present": "true"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the Trust Mark contain the id_code claim",
        "description": "In this test, an issued Trust Mark must be taken, decrypted and the presence of the id_code claim in it is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Statement response RP",
            "decode operation": [
              {
                "from": "body",
                "type": "jwt",
                "decode param": "[\\s\\S]*",
                "decode operation": [
                  {
                    "jwt from": "jwt payload",
                    "type": "jwt",
                    "decode param": "$.trust_marks[0].trust_mark",
                    "check": [
                      {
                        "in": "payload",
                        "check": "id_code",
                        "is present": "true"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the Trust Mark contain the logo_uri claim",
        "description": "In this test, an issued Trust Mark must be taken, decrypted and the presence of the logo_uri claim in it is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Statement response RP",
            "decode operation": [
              {
                "from": "body",
                "type": "jwt",
                "decode param": "[\\s\\S]*",
                "decode operation": [
                  {
                    "jwt from": "jwt payload",
                    "type": "jwt",
                    "decode param": "$.trust_marks[0].trust_mark",
                    "check": [
                      {
                        "in": "payload",
                        "check": "logo_uri",
                        "is present": "true"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the Trust Mark contain the organization_name claim",
        "description": "In this test, an issued Trust Mark must be taken, decrypted and the presence of the organization_name claim in it is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Statement response RP",
            "decode operation": [
              {
                "from": "body",
                "type": "jwt",
                "decode param": "[\\s\\S]*",
                "decode operation": [
                  {
                    "jwt from": "jwt payload",
                    "type": "jwt",
                    "decode param": "$.trust_marks[0].trust_mark",
                    "check": [
                      {
                        "in": "payload",
                        "check": "organization_name",
                        "is present": "true"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the Trust Mark contain the organization_type claim",
        "description": "In this test, an issued Trust Mark must be taken, decrypted and the presence of the organization_type claim in it is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Statement response RP",
            "decode operation": [
              {
                "from": "body",
                "type": "jwt",
                "decode param": "[\\s\\S]*",
                "decode operation": [
                  {
                    "jwt from": "jwt payload",
                    "type": "jwt",
                    "decode param": "$.trust_marks[0].trust_mark",
                    "check": [
                      {
                        "in": "payload",
                        "check": "organization_type",
                        "is present": "true"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the issued oauth_resource Trust Mark contain the policy_uri claim",
        "description": "In this test, a Trust Mark issued for an AA (oauth_resource profile) must be taken, decrypted and the presence of the policy_uri claim in it is checked",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Statement response RP",
            "decode operation": [
              {
                "from": "body",
                "type": "jwt",
                "decode param": "[\\s\\S]*",
                "decode operation": [
                  {
                    "jwt from": "jwt payload",
                    "type": "jwt",
                    "decode param": "$.trust_marks[0].trust_mark",
                    "check": [
                      {
                        "in": "payload",
                        "check": "policy_uri",
                        "is present": "true"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the Trust Mark contain the ref claim",
        "description": "In this test, an issued Trust Mark must be taken, decrypted and the presence of the ref claim in it is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Statement response RP",
            "decode operation": [
              {
                "from": "body",
                "type": "jwt",
                "decode param": "[\\s\\S]*",
                "decode operation": [
                  {
                    "jwt from": "jwt payload",
                    "type": "jwt",
                    "decode param": "$.trust_marks[0].trust_mark",
                    "check": [
                      {
                        "in": "payload",
                        "check": "ref",
                        "is present": "true"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the issued oauth_resource Trust Mark contain the tos_uri claim",
        "description": "In this test, a Trust Mark issued for an AA (oauth_resource profile) must be taken, decrypted and the presence of the tos_uri claim in it is checked",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Statement response RP",
            "decode operation": [
              {
                "from": "body",
                "type": "jwt",
                "decode param": "[\\s\\S]*",
                "decode operation": [
                  {
                    "jwt from": "jwt payload",
                    "type": "jwt",
                    "decode param": "$.trust_marks[0].trust_mark",
                    "check": [
                      {
                        "in": "payload",
                        "check": "tos_uri",
                        "is present": "true"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the Trust Mark contain the exp claim",
        "description": "In this test, an issued Trust Mark must be taken, decrypted and the presence of the exp claim in it is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Statement response RP",
            "decode operation": [
              {
                "from": "body",
                "type": "jwt",
                "decode param": "[\\s\\S]*",
                "decode operation": [
                  {
                    "jwt from": "jwt payload",
                    "type": "jwt",
                    "decode param": "$.trust_marks[0].trust_mark",
                    "check": [
                      {
                        "in": "payload",
                        "check": "exp",
                        "is present": "true"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the Trust Mark contain the iat claim",
        "description": "In this test, an issued Trust Mark must be taken, decrypted and the presence of the iat claim in it is checked.",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Statement response RP",
            "decode operation": [
              {
                "from": "body",
                "type": "jwt",
                "decode param": "[\\s\\S]*",
                "decode operation": [
                  {
                    "jwt from": "jwt payload",
                    "type": "jwt",
                    "decode param": "$.trust_marks[0].trust_mark",
                    "check": [
                      {
                        "in": "payload",
                        "check": "iat",
                        "is present": "true"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the Trust Mark contain the iss claim",
        "description": "In this test, an issued Trust Mark must be taken, decrypted and the presence of the iss claim in it is checked",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Statement response RP",
            "decode operation": [
              {
                "from": "body",
                "type": "jwt",
                "decode param": "[\\s\\S]*",
                "decode operation": [
                  {
                    "jwt from": "jwt payload",
                    "type": "jwt",
                    "decode param": "$.trust_marks[0].trust_mark",
                    "check": [
                      {
                        "in": "payload",
                        "check": "iss",
                        "is present": "true"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the issued oauth_resource Trust Mark contain the service_documentation claim",
        "description": "In this test, a Trust Mark issued for an AA (oauth_resource profile) must be taken, decrypted and the presence of the service_documentation claim in it is checked",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Statement response RP",
            "decode operation": [
              {
                "from": "body",
                "type": "jwt",
                "decode param": "[\\s\\S]*",
                "decode operation": [
                  {
                    "jwt from": "jwt payload",
                    "type": "jwt",
                    "decode param": "$.trust_marks[0].trust_mark",
                    "check": [
                      {
                        "in": "payload",
                        "check": "service_documentation",
                        "is present": "true"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "test": {
        "name": "Does the Trust Mark contain the sub claim",
        "description": "In this test, an issued Trust Mark must be taken, decrypted and the presence of the sub claim in it is checked",
        "type": "passive",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "message type": "Entity Statement response RP",
            "decode operation": [
              {
                "from": "body",
                "type": "jwt",
                "decode param": "[\\s\\S]*",
                "decode operation": [
                  {
                    "jwt from": "jwt payload",
                    "type": "jwt",
                    "decode param": "$.trust_marks[0].trust_mark",
                    "check": [
                      {
                        "in": "payload",
                        "check": "sub",
                        "is present": "true"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    }
  ]
}