{
  "test suite": {
    "name": "SA",
    "description": "JWT Check-Save to JWT",
    "filter messages": true
  },
  "tests": [
    {
      "test": {
        "name": "Does the Entity Statement's JWT payload contain a correct 'iss' claim",
        "description": "This test can be performed by taking the JWT present in the Entity Statement Response, base64url decoding the payload and checking the iss claim. Its value must be an URL identifying the SA",
        "type": "active",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "session": "s1",
            "action": "start"
          },
          {
            "action": "intercept",
            "from session": "s1",
            "then": "forward",
            "message type": "Entity Configuration response SA",
            "decode operations": [
              {
                "from": "body",
                "decode param": "[\\s\\S]*",
                "type": "jwt",
                "edits": [
                  {
                    "in": "payload",
                    "jwt save": "$.iss",
                    "as": "conf_iss"
                  }
                ]
              }
            ]
          },
          {
            "action": "intercept",
            "from session": "s1",
            "then": "forward",
            "message type": "Entity Statement response OP",
            "decode operations": [
              {
                "from": "url",
                "decode param": "client_assertion",
                "type": "jwt",
                "checks": [
                  {
                    "use variable": "true",
                    "in": "payload",
                    "check": "conf_iss",
                    "contains": "iss"
                  }
                ]
              }
            ]
          }
        ],
        "result": "correct flow s1"
      }
    },
    {
      "test": {
        "name": "Does the Entity Statement's JWT payload contain a correct 'iss' claim",
        "description": "This test can be performed by taking the JWT present in the Entity Statement Response, base64url decoding the payload and checking the iss claim. Its value must be an URL identifying the SA",
        "type": "active",
        "sessions": [
          "s1"
        ],
        "operations": [
          {
            "session": "s1",
            "action": "start"
          },
          {
            "action": "intercept",
            "from session": "s1",
            "then": "forward",
            "message type": "Entity Configuration response SA",
            "decode operations": [
              {
                "from": "body",
                "decode param": "[\\s\\S]*",
                "type": "jwt",
                "edits": [
                  {
                    "in": "payload",
                    "jwt save": "$.iss",
                    "as": "conf_iss"
                  }
                ]
              }
            ]
          },
          {
            "action": "intercept",
            "from session": "s1",
            "then": "forward",
            "message type": "Entity Statement response RP",
            "decode operations": [
              {
                "from": "url",
                "decode param": "client_assertion",
                "type": "jwt",
                "checks": [
                  {
                    "use variable": "true",
                    "in": "payload",
                    "check": "conf_iss",
                    "contains": "iss"
                  }
                ]
              }
            ]
          }
        ],
        "result": "correct flow s1"
      }
    }
  ]
}